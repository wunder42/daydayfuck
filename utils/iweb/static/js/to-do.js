// Generated by CoffeeScript 1.6.3
(function() {
  var TodoApp,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  console.log('in coffee');

  Storage.prototype.setObj = function(key, obj) {
    return this.setItem(key, JSON.stringify(obj));
  };

  Storage.prototype.getObj = function(key) {
    return JSON.parse(this.getItem(key));
  };

  TodoApp = (function() {
    function TodoApp() {
      this.bind_listening = __bind(this.bind_listening, this);
      console.log('init TodoApp', this);
      this.display_items();
      this.bind_listening();
    }

    TodoApp.prototype.create_todo_item = function(content) {
      var tid, _item, _timestamp;
      console.log('create_todo_item');
      _timestamp = new Date().getTime();
      tid = Math.floor(Math.random() * 1000000);
      localStorage.setObj(tid, {
        id: tid,
        con: content,
        timestamp: _timestamp,
        checked: false
      });
      _item = localStorage.getObj(tid);
      return $('.to-do-header').after("<div><span class='label-info to-do-item' data-id='" + _item.id + "'><input type='checkbox' class='to-do-check' checked='				" + (_item.checked ? 'checked' : '') + "'>" + _item.con + "</span></div>");
    };

    TodoApp.prototype.display_items = function() {
      var item, _i, _item, _len, _ref, _results;
      console.log('display_items');
      _ref = Object.keys(localStorage);
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        item = _ref[_i];
        _item = localStorage.getObj(item);
        _results.push($('.to-do-header').after("<div><span class='label-info to-do-item' data-id='" + _item.id + "'><input type='checkbox' class='to-do-check' 				" + (_item.checked ? 'checked' : '') + ">" + _item.con + "</span></div>"));
      }
      return _results;
    };

    TodoApp.prototype.bind_listening = function() {
      var pp;
      pp = this;
      $(".btn").click(function(e) {
        var val;
        console.log($(this).attr('data-status'), pp);
        if ($(this).attr('data-status') === 'add') {
          $(".to-do").show();
          return $(this).attr('data-status', 'edit');
        } else if ($(this).attr('data-status') === 'edit') {
          if ($('.to-do').val() !== '') {
            console.log('edit value:', $('.to-do').val());
          }
          val = $('.to-do').val();
          if (val !== '') {
            pp.create_todo_item(val);
          }
          console.log('hehe');
          $(".to-do").val('').hide();
          return $(this).attr('data-status', 'add');
        }
      });
      return $(".to-do-check").live('click', function(e) {
        console.log('check:', $(this).attr('checked'));
        if ($(this).attr('checked') === 'checked') {
          return $(this).parent().css('text-decoration', 'line-through');
        } else {
          return $(this).parent().css('text-decoration', '');
        }
      });
    };

    return TodoApp;

  })();

  $(function() {
    var app;
    if (!localStorage) {
      alert('please use newest ');
    }
    return app = new TodoApp();
  });

}).call(this);
